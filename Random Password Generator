# Importing the necessary module for creating a GUI
import tkinter as tk
# Importing modules for generating random characters and accessing string constants
import random
import string

# Function to generate a random password based on user input
def generate_password():
    # Getting the desired length of the password from the user
    length = int(entry_length.get())
    # Checking if the user wants to include numbers in the password
    include_numbers = var_numbers.get()
    # Checking if the user wants to include characters in the password
    include_characters = var_characters.get()
    # Initializing the set of characters to be used in the password
    characters = ''

    # Checking if the user wants to include numbers
    if include_numbers:
        # Adding numbers to the set of characters
        characters += string.digits
    # Checking if the user wants to include characters
    if include_characters:
        # Adding letters and special characters to the set of characters
        characters += string.ascii_letters + string.punctuation

    # If the user hasn't selected any option, prompt them to choose at least one
    if not characters:
        password_display.delete(1.0, tk.END)
        password_display.insert(tk.END, "Please select at least one option.")
        return

    # Generating the password by randomly choosing characters from the set
    password = ''.join(random.choice(characters) for _ in range(length))
    # Displaying the generated password in the text box
    password_display.delete(1.0, tk.END)
    password_display.insert(tk.END, password)

# Creating the main window for the application
root = tk.Tk()
# Setting the title of the window
root.title("Random Password Generator")

# Calculating half of the desktop width and height
screen_width = root.winfo_screenwidth() // 2
screen_height = root.winfo_screenheight() // 2

# Setting the size and position of the window
root.geometry(f"{screen_width}x{screen_height}+{screen_width // 4}+{screen_height // 4}")

# Creating a label to prompt the user to enter the password length
label_length = tk.Label(root, text="Desired Password Length:")
label_length.grid(row=0, column=0, padx=10, pady=10, sticky="w")

# Creating an entry field for the user to input the desired password length
entry_length = tk.Entry(root)
entry_length.grid(row=0, column=1, padx=10, pady=10)

# Creating a checkbox for the user to select whether to include numbers in the password
var_numbers = tk.BooleanVar()
chk_numbers = tk.Checkbutton(root, text="Include Numbers", variable=var_numbers)
chk_numbers.grid(row=1, column=0, padx=10, pady=10, sticky="w")

# Creating a checkbox for the user to select whether to include characters in the password
var_characters = tk.BooleanVar()
chk_characters = tk.Checkbutton(root, text="Include Characters", variable=var_characters)
chk_characters.grid(row=1, column=1, padx=10, pady=10, sticky="w")

# Creating a button to generate the password based on user input
generate_button = tk.Button(root, text="Generate Password", command=generate_password)
generate_button.grid(row=2, columnspan=2, padx=10, pady=10)

# Creating a text box to display the generated password
password_display = tk.Text(root, height=5, width=50)
password_display.grid(row=3, columnspan=2, padx=10, pady=10)

# Starting the main event loop of the application
root.mainloop()
