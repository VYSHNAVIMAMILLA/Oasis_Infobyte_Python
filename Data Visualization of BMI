import tkinter as tk
from tkinter import ttk
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

def calculate_bmi():
    try:
        weight = float(weight_entry.get())
        height = float(height_entry.get()) / 100  # Convert height to meters
        bmi = round(weight / (height ** 2), 2)
        result_label.config(text=f"BMI: {bmi}")

        # Update the data visualization
        update_visualization(weight, height, bmi)

    except ValueError:
        result_label.config(text="Invalid input. Please enter valid numbers.")

def update_visualization(weight, height, bmi):
    # Plotting data
    category = get_bmi_category(bmi)
    plt.scatter(height, weight, color=get_category_color(category), label=f'BMI Data ({category})')
    plt.xlabel('Height (cm)')
    plt.ylabel('Weight (kg)')
    plt.title('BMI Data Visualization')
    plt.legend()

    # Display the plot in the Tkinter window
    canvas = FigureCanvasTkAgg(plt.gcf(), master=window)
    canvas_widget = canvas.get_tk_widget()
    canvas_widget.grid(row=4, column=0, columnspan=2)
    canvas.draw()

def get_bmi_category(bmi):
    if bmi < 18.5:
        return 'Underweight'
    elif 18.5 <= bmi < 25:
        return 'Healthy'
    else:
        return 'Overweight'

def get_category_color(category):
    if category == 'Underweight':
        return 'blue'
    elif category == 'Healthy':
        return 'green'
    else:
        return 'red'

# GUI setup
window = tk.Tk()
window.title("BMI Calculator")

# Labels and entries
weight_label = ttk.Label(window, text="Weight (kg):")
weight_label.grid(row=0, column=0, padx=10, pady=10)
weight_entry = ttk.Entry(window)
weight_entry.grid(row=0, column=1, padx=10, pady=10)

height_label = ttk.Label(window, text="Height (cm):")
height_label.grid(row=1, column=0, padx=10, pady=10)
height_entry = ttk.Entry(window)
height_entry.grid(row=1, column=1, padx=10, pady=10)

result_label = ttk.Label(window, text="BMI: ")
result_label.grid(row=2, column=0, columnspan=2, pady=10)

calculate_button = ttk.Button(window, text="Calculate BMI", command=calculate_bmi)
calculate_button.grid(row=3, column=0, columnspan=2, pady=10)

window.mainloop()
